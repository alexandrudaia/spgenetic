(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/opedge/workspace/web2py/applications/shortestpath/controllers/app.py'
p4
sS'code'
p5
S'\nMIN_VERTEX_COUNT = 10\nMAX_VERTEX_COUNT = 101\n\ndef index():\n#    size_onchange = "ajax(\'" + URL(r=request, f=\'drawTableWithOptions\') + "\',[\'tsize\'],\'graph_table\');"\n#    size = SELECT(_id=\'tsize\', requires=IS_INT_IN_RANGE(10, 101),\n#                         _onchange=size_onchange, *range(10, 101, 1))\n#\n#    oriented = INPUT(_id="oriented", _type="checkbox")\n#    fill_button = INPUT(_type="button", _value="\xd0\x97\xd0\xb0\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbd\xd0\xb8\xd1\x82\xd1\x8c")\n#    connectivity = INPUT(_type=\'double\', _name=\'connectivity\', requires=IS_FLOAT_IN_RANGE(0, 1), _value=\'0.5\')\n#    form = FORM(TABLE(TR("\xd0\x9a\xd0\xbe\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xbe \xd0\xb2\xd0\xb5\xd1\x80\xd1\x88\xd0\xb8\xd0\xbd", size)),\n#                DIV(makeTable(), makeGraphOptions(), _id="graph_table"),\n#                TABLE(TR(H2("\xd0\x97\xd0\xb0\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb3\xd1\x80\xd0\xb0\xd1\x84\xd0\xb0"), ""),\n#                      TR("\xd0\x9e\xd1\x80\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb9", oriented),\n#                      TR("\xd0\xa1\xd0\xb2\xd1\x8f\xd0\xb7\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c", connectivity),\n#                      TR(fill_button, \'\'),\n#                      _class=\'warn\'),\n#                INPUT(_type=\'submit\', _value=\'Find shortest path\'))\n#    from gluon.sqlhtml import form_factory\n#\n#    oriented = SQLField(\'oriented\', \'boolean\', default=False)\n#\n#\n#    form = form_factory(oriented)\n#\n##    form[0].insert(0, makeTable())\n#\n#    if form.accepts(request.vars, session):\n#        print(form[0].xml())\n\n    size_onchange = "ajax(\'" + URL(r=request, f=\'drawTable\') + "\',[\'tsize\'],\'graph_table\');"\n    size = SELECT(_name=\'size\', _value=\'10\', value=\'10\', _id=\'tsize\', _class=\'integer\',\n                  requires=IS_INT_IN_RANGE(MIN_VERTEX_COUNT, 11),\n                  _onchange=size_onchange, *range(MIN_VERTEX_COUNT, MAX_VERTEX_COUNT, 1))\n\n    from gluon.sqlhtml import form_factory\n    oriented = SQLField(\'oriented\', \'boolean\', default=False)\n    connectivity = SQLField(\'connectivity\', \'double\', default=\'0.5\',\n                            requires=IS_FLOAT_IN_RANGE(0, 1))\n\n    tform = form_factory(oriented, connectivity)\n\n    tform[0].insert(0, TR(\'Size\', size))\n    tform[0].insert(1, TR(\'Cost\', DIV(makeTable(), _id=\'graph_table\')))\n\n    if tform.accepts(request.vars, session, keepvalues=True):\n        pass\n    else:\n        form.vars.graph = 0\n        request.vars.graph = 0\n\n    return dict(form=tform)\n\ndef makeTable(fill=False, numVertex=10):\n    from applications.shortestpath.modules.shortestpath.graph import Graph, generateRandomGraph\n\n    graph = generateRandomGraph(numVertex) if fill else None\n\n    trs = [TR(\'\', *[x for x in range(numVertex)])]\n    for i in range(numVertex):\n        tds = []\n        for k in range(numVertex):\n            v = \'\'\n            if fill:\n                v = graph[i][k] if graph[i][k] != float(\'inf\') else \'\'\n            tds.append(INPUT(_type=\'text\', _class=\'integer\',\n                             _name=\'graph\', _size=\'1\', value=v))\n        trs.append(TR(i, *tds))\n    return TABLE(*trs)\n\ndef drawTable():\n    return makeTable(numVertex=int(request.vars.tsize)).xml()\n\n\nresponse._vars=response._caller(index)\n'
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "/home/opedge/workspace/web2py/gluon/restricted.py", line 98, in restricted\n    exec ccode in environment\n  File "/home/opedge/workspace/web2py/applications/shortestpath/controllers/app.py", line 77, in <module>\n  File "/home/opedge/workspace/web2py/gluon/globals.py", line 75, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/opedge/workspace/web2py/applications/shortestpath/controllers/app.py", line 51, in index\n    form.vars.graph = 0\nNameError: global name \'form\' is not defined\n'
p8
s.