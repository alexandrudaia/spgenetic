(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/opedge/workspace/web2py/applications/shortestpath/controllers/app.py'
p4
sS'code'
p5
S'def index():\n    size_onchange = "ajax(\'" + URL(r=request, f=\'drawTableWithOptions\') + "\',[\'tsize\'],\'graph_table\');"\n    size = SELECT(_id=\'tsize\', requires=IS_INT_IN_RANGE(10, 101),\n                         _onchange=size_onchange, *range(10, 101, 1))\n\n    oriented = INPUT(_id="oriented", _type="checkbox")\n    fill_button = INPUT(_type="button", _value="\xd0\x97\xd0\xb0\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbd\xd0\xb8\xd1\x82\xd1\x8c")\n    connectivity = INPUT(_name="connectivity", _id="connectivity", _type="text", _value="0", _size="3", requires=IS_FLOAT_IN_RANGE(0.1, 1))\n    form = FORM(TABLE(TR("\xd0\x9a\xd0\xbe\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xbe \xd0\xb2\xd0\xb5\xd1\x80\xd1\x88\xd0\xb8\xd0\xbd", size)),\n                DIV(makeTable(), makeGraphOptions(), _id="graph_table"),\n                TABLE(TR(H2("\xd0\x97\xd0\xb0\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb3\xd1\x80\xd0\xb0\xd1\x84\xd0\xb0"), ""),\n                      TR("\xd0\x9e\xd1\x80\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb9", oriented),\n                      TR("\xd0\xa1\xd0\xb2\xd1\x8f\xd0\xb7\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c", connectivity),\n                      TR(fill_button, \'\'),\n                      _class=\'warn\'),\n                INPUT(_type=\'button\', _value=\'Find shortest path\'))\n\n    if form.accepts(request.vars, formname=None):\n        response.flash = "VALID FORM"\n    else:\n        response.flash = "INVALID FORM"\n\n    return dict(form=form)\n\ndef makeTable(numVertex=10):\n    trs = [TR(\'\', *[x for x in range(numVertex)])]\n    for i in range(numVertex):\n        tds = []\n        for k in range(numVertex):\n            tds.append(INPUT(_type="text", _class="integer", _id="cell" + str(k) + "_" + str(i),\n                             _name="graph", _size="1", _value="0", requires=IS_NULL_OR(IS_INT)))\n        trs.append(TR(i, *tds))\n    return TABLE(*trs)\n\ndef makeGraphOptions(numVertex=10):\n\n    start_vertex = SELECT(_id=\'start\', requires=IS_INT_IN_RANGE(0, numVertex),\n                          *range(numVertex))\n    stop_vertex = SELECT(_id=\'stop\', requires=IS_INT_IN_RANGE(0, numVertex),\n                          *range(numVertex))\n\n    opt_table = TABLE(TR(\'\xd0\x9d\xd0\xb0\xd1\x87\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f \xd0\xb2\xd0\xb5\xd1\x80\xd1\x88\xd0\xb8\xd0\xbd\xd0\xb0\', start_vertex,\n                         \'\xd0\x9a\xd0\xbe\xd0\xbd\xd0\xb5\xd1\x87\xd0\xbd\xd0\xb0\xd1\x8f \xd0\xb2\xd0\xb5\xd1\x80\xd1\x88\xd0\xb8\xd0\xbd\xd0\xb0\', stop_vertex))\n    return opt_table\n\ndef drawTableWithOptions():\n    return makeTable(int(request.vars.tsize)).xml() + \\\n           makeGraphOptions(int(request.vars.tsize)).xml()\n\n\nresponse._vars=response._caller(index)\n'
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "/home/opedge/workspace/web2py/gluon/restricted.py", line 98, in restricted\n    exec ccode in environment\n  File "/home/opedge/workspace/web2py/applications/shortestpath/controllers/app.py", line 51, in <module>\n  File "/home/opedge/workspace/web2py/gluon/globals.py", line 75, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/opedge/workspace/web2py/applications/shortestpath/controllers/app.py", line 10, in index\n    DIV(makeTable(), makeGraphOptions(), _id="graph_table"),\n  File "/home/opedge/workspace/web2py/applications/shortestpath/controllers/app.py", line 31, in makeTable\n    _name="graph", _size="1", _value="0", requires=IS_NULL_OR(IS_INT)))\nNameError: global name \'IS_INT\' is not defined\n'
p8
s.